module Plasmacore

class DisplayState
  METHODS
    method handle( e:KeyEvent )
      Display.screen.state.handle( e )

    method handle( e:PointerEvent )
      Display.screen.state.handle( e )

    method handle( e:ScrollEvent )
      Display.screen.state.handle( e )

    method handle( e:TextEvent )
      Display.screen.state.handle( e )

    method handle_draw
      Display.screen.state.handle_draw

    method handle_resize
      Display.screen.state.handle_resize

    method handle_update
      Display.screen.state.handle_update
endClass

class FadeTransition : DisplayState
  # Write Display.display_state = FadeTransition(to_screen,[duration],[color]) to fade between
  # the current screen and the specified screen.
  PROPERTIES
    to_screen : Screen
    duration  : Real64
    color     : Color

    fading_out       = true
    fade_out_opacity : EasedValue<<Real64>>
    fade_in_opacity  : EasedValue<<Real64>>

  METHODS
    method init( to_screen, duration=0.5, color=Color.BLACK )
      fade_out_opacity = EasedValue<<Real64>>( 0.0, duration/2, ProgressFn.QUADRATIC_OUT )
      fade_out_opacity.target_value = 1.0

  METHODS
    method handle( e:KeyEvent )
      noAction

    method handle( e:PointerEvent )
      noAction

    method handle( e:ScrollEvent )
      noAction

    method handle( e:TextEvent )
      noAction

    method handle_draw
      Display.screen.state.handle_draw
      if (fading_out)
        Display.bounds.fill( color.with_alpha(fade_out_opacity.value) )
      else
        Display.bounds.fill( color.with_alpha(fade_in_opacity.value) )
      endIf

    method handle_resize
      Display.screen.state.handle_resize
      to_screen.state.handle_resize

    method handle_update
      if (fading_out)
        if (fade_out_opacity.value == 1.0)
          fading_out = false
          Display.screen.state.change_screen( to_screen )
          fade_in_opacity  = EasedValue<<Real64>>( 1.0, duration/2, ProgressFn.QUADRATIC_IN )
          fade_in_opacity.target_value = 0.0
        endIf
      else
        if (fade_in_opacity.value == 0.0) Display.display_state = DisplayState()
      endIf
      Display.screen.state.handle_update
endClass

